#server
#spring.mvc.favicon.enabled = false
server.port=8888
server.tomcat.uri-encoding=utf-8

#spring-cloud
spring.application.name=spring-cloud-eureka-client
eureka.instance.hostname=localhost
#server才需要配置，registerWithEureka注册自己
#eureka.client.registerWithEureka=true
#客户端就不会去服务中心拉取服务
#eureka.client.fetchRegistry=false
eureka.client.serviceUrl.defaultZone=http://localhost:8889/eureka/

#redis
#Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.host=192.168.179.129
spring.redis.port=6380
spring.redis.password=
spring.redis.timeout=1000
spring.redis.cluster.nodes=192.168.179.129:6380,192.168.179.129:6381,192.168.179.129:6382,192.168.179.129:6383
#最大连接数
spring.redis.pool.max-active=64
#最大阻塞时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#空闲连接
spring.redis.pool.max-idle=10
spring.redis.pool.min-idle=0

#zookeeper
zookeeper.address=192.168.179.129:2181,192.168.179.129:2182,192.168.179.129:2183
zookeeper.timeout=3000

#rabbitMQ
spring.rabbitmq.host=192.168.179.129
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#消息发送确认（回调）
spring.rabbitmq.publisher-confirms = true
spring.rabbitmq.publisher-returns = true
#设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true
#消息接收确认，NONE：不确认，AUTO：自动确认，MANUAL：手动确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#消息重试机制
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.initial-interval=5000
#重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列）
#spring.rabbitmq.listener.simple.default-requeue-rejected=false

#mysql
spring.datasource.jdbc-url=jdbc:mysql://127.0.0.1:3306/project?useSSL=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=170396
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.db1.jdbc-url=jdbc:mysql://127.0.0.1:3306/project?useSSL=true&serverTimezone=UTC
spring.datasource.db1.username=root
spring.datasource.db1.password=170396
spring.datasource.db1.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.db2.jdbc-url=jdbc:mysql://127.0.0.1:3306/project?useSSL=true&serverTimezone=UTC
spring.datasource.db2.username=root
spring.datasource.db2.password=170396
spring.datasource.db2.driver-class-name=com.mysql.jdbc.Driver

#mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.typeAliasesPackage=com.test.demo.model

#jpa
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

#corsFilter
cors.origin=file:// , http://localhost:8080 , http://127.0.0.1:8080 , http://10.10.19.73:8080
cors.header=*
cors.method=*

#myFileter
my.filter.unfilter-url=/favicon.ico

#ServletRequestListener
servlet.request.listener.unlistener-url=/favicon.ico

#urlInterceptor
url.interceptor.white-list=0:0:0:0:0:0:0:1 , 10.10.19.73
url.interceptor.black-list=

#JWT
jwt.key=secretkey
jwt.name=token